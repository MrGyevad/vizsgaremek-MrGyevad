package hu.progmasters.animalShelter;

import hu.progmasters.animalShelter.domain.Cat;
import hu.progmasters.animalShelter.domain.Dog;
import hu.progmasters.animalShelter.domain.Gender;
import hu.progmasters.animalShelter.repository.CatRepository;
import hu.progmasters.animalShelter.repository.DogRepository;
import org.junit.jupiter.api.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.annotation.DirtiesContext;

import javax.transaction.Transactional;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import static org.junit.jupiter.api.Assertions.*;

@SpringBootTest
@DirtiesContext(classMode = DirtiesContext.ClassMode.BEFORE_EACH_TEST_METHOD)
@TestMethodOrder(MethodOrderer.OrderAnnotation.class)
public class CatRepositoryTest {

    @Autowired
    CatRepository catRepository;
    
    @Autowired
    DogRepository dogRepository;
    
    @Test
    @Order(1)
    @Transactional
    void testSaveAdoptedCat_SuccessfulSave(){
      Cat cat1 = new Cat(1, "Lucifer", 10, "Giant", Gender.TOM, LocalDateTime.now(), true, false, new BestFriend(1, null, null));
      Dog dog1 = new Dog(1, "Sirion", 6, "Mudi", Gender.SIRE, LocalDateTime.now(), true, false, new BestFriend(1, null, null));
      catRepository.save(cat1);
      dogRepository.save(dog1);
      assertTrue(bestFriendRepository.findAll().isEmpty);
      BestFriend saved = bestFriendRepository.becomeBestFriends(cat1, dog1);
      assertEquals(1, bestFriendRepository.findAll().size());
      assertEquals("Lucifer", bestFriendRepository.findAll().get(1).getCat().getName());
      assertEquals("Sirion", bestFriendRepository.findAll().get(1).getDog().getName());
    }
    
    @Test
    @Order(2)
    @Transactional
    void testSaveAdoptedCat
